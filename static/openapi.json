{
  "openapi": "3.0.0",
  "info": {
    "title": "viagogo API v2",
    "description": "viagogo's v2 REST API",
    "version": "2.249.0.0",
    "x-logo": {
      "url": "https://img.vggcdn.net/img/assets/logo/viagogo_logo_apidocs.png",
      "backgroundColor": "#222222"
    }
  },
  "servers": [
    {
      "url": "https://api.viagogo.net/v2",
      "description": "Production"
    },
    {
      "url": "https://sandbox.api.viagogo.net/v2",
      "description": "Sandbox"
    }
  ],
  "paths": {
    "/currencies/{currencyCode}": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Get a currency",
        "operationId": "Currencies_GetCurrency",
        "parameters": [
          {
            "name": "currencyCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/currencies": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "List currencies",
        "operationId": "Currencies_GetCurrencies",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `code`, or`name`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Currencys"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/categories/{categoryId}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get a category",
        "operationId": "Categories_GetCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/categories/{categoryId}/children": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "List category children",
        "description": "List categories that are direct-descendants of a category.",
        "operationId": "Categories_GetChildren",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filters the response to only return items that have been updated since the given timestamp",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `id`, `max_event_date`, `min_event_date`, `min_ticket_price`, `name`, `only_with_events`, `only_with_tickets`, `rating`, or`resource_version`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Categories"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/events/{eventId}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get an event",
        "operationId": "Events_Get",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/categories/{categoryId}/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "List events for a category",
        "operationId": "Events_GetCategoryEvents",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "tagTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "byte",
              "default": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filters the response to only return items that have been updated since the given timestamp",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `distance`, `id`, `min_ticket_price`, `name`, `number_of_tickets`, `on_sale_date`, `only_with_tickets`, `resource_version`, or`start_date`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/venues/{venueId}": {
      "get": {
        "tags": [
          "Venues"
        ],
        "summary": "Get a venue",
        "operationId": "Venues_GetVenue",
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Venue"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/venues": {
      "get": {
        "tags": [
          "Venues"
        ],
        "summary": "List venues",
        "operationId": "Venues_GetVenues",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `country_code`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Venues"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/metroareas/{metroAreaId}": {
      "get": {
        "tags": [
          "MetroAreas"
        ],
        "summary": "Get a metro area",
        "operationId": "MetroAreas_GetMetroArea",
        "parameters": [
          {
            "name": "metroAreaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/MetroArea"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/metroareas": {
      "get": {
        "tags": [
          "MetroAreas"
        ],
        "summary": "List metro areas",
        "operationId": "MetroAreas_GetMetroAreas",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `id`, or`name`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MetroAreas"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/events/{eventId}/listings": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "List listings for an event",
        "operationId": "Listings_GetEventListings",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "number_of_tickets",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "sections",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ticket_classes",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `estimated_ticket_price`, `id`, `number_of_tickets`, `seating.section`, or`ticket_price`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Listings"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/listings/{listingId}": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Get a listing",
        "operationId": "Listings_GetListing",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Listing"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search for entities",
        "description": "Search for entities that match a given query",
        "operationId": "Search_Get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The query text to be used to match entities.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "A comma-separated string of the different types of entities to return. Can be `event`, `category`, `metro_area` or `venue`. Note: If type is not specified then all types of entities will be returned.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `order`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/SearchResults"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "": {
      "get": {
        "tags": [
          "Root"
        ],
        "summary": "Get the root API resource",
        "operationId": "ApiRoot_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiRoot"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/sellerlistings/{listingId}": {
      "patch": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Update a seller listing",
        "operationId": "SellerListings_Patch",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PatchSellerListingRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Get a seller listing",
        "operationId": "SellerListings_Get",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Delete a seller listing",
        "operationId": "SellerListings_DeleteListing",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sellerlistings": {
      "get": {
        "tags": [
          "SellerListings"
        ],
        "summary": "List seller listings",
        "description": "List seller listings for the authenticated user.",
        "operationId": "SellerListings_GetSellerListings",
        "parameters": [
          {
            "name": "event_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "requested_event_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filters the response to only return items that have been updated since the given timestamp",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `available_tickets`, `created_at`, `event_date`, `event_name`, `expiration_date`, `price`, `resource_version`, or`ticket_availability_date`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListings"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Create a seller listing for a requested event",
        "description": "Creates a seller listing for an event requested by the current user.",
        "operationId": "SellerListings_CreateListingForRequestedEvent",
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostRequestedEventSellerListingRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings",
              "write:requestedevents"
            ]
          }
        ]
      }
    },
    "/events/{eventId}/sellerlistingpreview": {
      "post": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Preview a seller listing",
        "description": "Creates a preview of a seller listing. The listing will not have an `id` and will not actually be created on the viagogo marketplace.",
        "operationId": "SellerListings_CreateListingPreview",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostSellerListingPreviewRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/updatepreview": {
      "post": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Preview a seller listing update",
        "description": "Creates a preview of an update to a seller listing. The updates will not actually be applied to the listing on the viagogo marketplace.",
        "operationId": "SellerListings_UpdateListingPreview",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostSellerListingPreviewRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sellerlistingpreview": {
      "post": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Preview a seller listing for a requested event",
        "description": "Creates a preview of a seller listing for an event requested by the current user. The listing will not have an `id` and will not actually be created on the viagogo marketplace.",
        "operationId": "SellerListings_CreateListingPreviewForRequestedEvent",
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostRequestedEventSellerListingPreviewRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings",
              "write:requestedevents"
            ]
          }
        ]
      }
    },
    "/events/{eventId}/sellerlistings": {
      "post": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Create a seller listing",
        "operationId": "SellerListings_CreateListing",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostSellerListingRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/externalsellerlistings/{externallistingId}": {
      "get": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Get a seller listing by external ID",
        "description": "Get a seller listing by identifier that has been assigned to the listing in an external inventory management system.",
        "operationId": "SellerListings_GetByExternalListingId",
        "parameters": [
          {
            "name": "externallistingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      }
    },
    "/externalsellerlistings/{externalId}": {
      "patch": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Update a seller listing by external ID",
        "description": "Update a seller listing by identifier that has been assigned to the listing in an external inventory management system.",
        "operationId": "SellerListings_PatchByExternalListingId",
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PatchSellerListingRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Delete a seller listing by external ID",
        "description": "Delete a seller listing by identifier that has been assigned to the listing in an external inventory management system.",
        "operationId": "SellerListings_DeleteListingByExternalListingId",
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/events/{eventId}/listingconstraints": {
      "get": {
        "tags": [
          "ListingConstraints"
        ],
        "summary": "List listing constraints for an event",
        "operationId": "ListingConstraints_GetEventListingConstraints",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingConstraints"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/sellerlistings/{listingId}/constraints": {
      "get": {
        "tags": [
          "ListingConstraints"
        ],
        "summary": "Get listing constraints for a seller listing",
        "operationId": "ListingConstraints_GetListingConstraints",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingConstraints"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/listingconstraints": {
      "put": {
        "tags": [
          "ListingConstraints"
        ],
        "summary": "Get listing constraints for a requested event",
        "description": "Get listings constraints for an event requested by the current user.",
        "operationId": "ListingConstraints_PutRequestedEventListingConstraints",
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PutRequestedEventRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingConstraints"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings",
              "write:requestedevents"
            ]
          }
        ]
      }
    },
    "/sellerevents": {
      "get": {
        "tags": [
          "SellerEvents"
        ],
        "summary": "List seller events",
        "description": "List events with listings that belong to the authenticated user.",
        "operationId": "SellerEvents_GetSellerEvents",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filters the response to only return items that have been updated since the given timestamp",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `number_of_tickets`, `resource_version`, or`start_date`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/SellerEvents"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "internal",
              "read:sellerlistings"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "SellerEvents"
        ],
        "summary": "Create a requested event",
        "description": "Request for an event to be created on the viagogo marketplace.",
        "operationId": "SellerEvents_PutSellerRequestedEvent",
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PutRequestedEventRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerEvent"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:requestedevents"
            ]
          }
        ]
      }
    },
    "/sellerevents/{eventIdOrRequestedEventId}": {
      "get": {
        "tags": [
          "SellerEvents"
        ],
        "summary": "Get a seller event",
        "description": "Get an event with listings belonging to the current user",
        "operationId": "SellerEvents_GetSellerEvent",
        "parameters": [
          {
            "name": "eventIdOrRequestedEventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerEvent"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sales/{saleId}/shipments/{shipmentId}/label": {
      "get": {
        "tags": [
          "Shipments (Sales)"
        ],
        "summary": "Get shipping label for a sale",
        "operationId": "Shipments_GetSaleShippingLabel",
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user",
              "read:sales"
            ]
          }
        ]
      }
    },
    "/sales/{saleId}/shipments": {
      "get": {
        "tags": [
          "Shipments (Sales)"
        ],
        "summary": "List shipments for a sale",
        "operationId": "Shipments_GetSaleShipments",
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipments"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user",
              "read:sales"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Shipments (Sales)"
        ],
        "summary": "Print a shipping label for a sale",
        "operationId": "Shipments_PutOrGetSaleShipmentLabel",
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user",
              "write:sales"
            ]
          }
        ]
      }
    },
    "/sales/{saleId}/shipments/{shipmentId}": {
      "patch": {
        "tags": [
          "Shipments (Sales)"
        ],
        "summary": "Update a shipment for a sale",
        "operationId": "Shipments_PatchSaleShipment",
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PatchShipmentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user",
              "write:sales"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/shipments/{shipmentId}/label": {
      "get": {
        "tags": [
          "Shipments (Inventory)"
        ],
        "summary": "Get a shipping label for a seller listing",
        "operationId": "Shipments_GetListingShippingLabel",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user",
              "read:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/shipments": {
      "get": {
        "tags": [
          "Shipments (Inventory)"
        ],
        "summary": "List shipments for a seller listing",
        "operationId": "Shipments_GetListingShipments",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipments"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user",
              "read:sellerlistings"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Shipments (Inventory)"
        ],
        "summary": "Print a shipping label for a seller listing",
        "operationId": "Shipments_PutOrGetListingShipmentLabel",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user",
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/shipments/{shipmentId}": {
      "patch": {
        "tags": [
          "Shipments (Inventory)"
        ],
        "summary": "Update a shipment for a seller listing",
        "operationId": "Shipments_PatchListingShipment",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PatchShipmentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user",
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sales/{saleId}/eticketuploads": {
      "post": {
        "tags": [
          "E-Tickets (Sales)"
        ],
        "summary": "Upload e-tickets for a sale",
        "operationId": "ETicket_UploadSaleETicket",
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETicketUploads"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user",
              "write:sales"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "E-Tickets (Sales)"
        ],
        "summary": "List e-ticket uploads for a sale",
        "operationId": "ETicket_GetSaleETicketUploads",
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETicketUploads"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user",
              "read:sales"
            ]
          }
        ]
      }
    },
    "/sales/{saleId}/etickets": {
      "get": {
        "tags": [
          "E-Tickets (Sales)"
        ],
        "summary": "List e-tickets for a sale",
        "operationId": "ETicket_GetSaleETickets",
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETickets"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user",
              "read:sales"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/eticketuploads": {
      "post": {
        "tags": [
          "E-Tickets (Inventory)"
        ],
        "summary": "Upload e-tickets for a seller listing",
        "operationId": "ETicket_UploadListingETicket",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETicketUploads"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "E-Tickets (Inventory)"
        ],
        "summary": "List e-ticket uploads for a seller listing",
        "operationId": "ETicket_GetListingETicketUploads",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETicketUploads"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      }
    },
    "/events/{eventId}/eticketuploads": {
      "post": {
        "tags": [
          "E-Tickets (Inventory)"
        ],
        "summary": "Upload e-tickets for an event",
        "operationId": "ETicket_UploadEventETicket",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETicketUploads"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "E-Tickets (Inventory)"
        ],
        "summary": "List e-ticket uploads for an event",
        "operationId": "ETicket_GetEventETicketUploads",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETicketUpload"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/etickets": {
      "get": {
        "tags": [
          "E-Tickets (Inventory)"
        ],
        "summary": "List e-tickets for a seller listing",
        "operationId": "ETicket_GetListingETickets",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETickets2"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "E-Tickets (Inventory)"
        ],
        "summary": "Mark-back e-tickets from a seller listing",
        "description": "Removes a certain number of e-tickets that you no longer wish to sell from your listing.",
        "operationId": "ETicket_MarkBackETickets",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostMarkBackETicketsRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETickets2"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sales/{saleId}/etickets/{eticketId}": {
      "delete": {
        "tags": [
          "E-Tickets (Sales)"
        ],
        "summary": "Delete e-ticket from a sale",
        "operationId": "ETicket_DeleteSaleETicket",
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "eticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user",
              "write:sales"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/etickets/{ETicketId}": {
      "delete": {
        "tags": [
          "E-Tickets (Inventory)"
        ],
        "summary": "Delete e-ticket from a seller listing",
        "operationId": "ETicket_DeleteListingETicket",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/events/{eventId}/etickets/{eticketId}": {
      "delete": {
        "tags": [
          "E-Tickets (Inventory)"
        ],
        "summary": "Delete e-ticket from an event",
        "operationId": "ETicket_DeleteEventETicket",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "eticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user"
            ]
          }
        ]
      }
    },
    "/sales": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "List sales",
        "description": "List sales for the authenticated user.",
        "operationId": "Sales_GetSales",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filters the response to only return items that have been updated since the given timestamp",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `created_at`, `event_date`, `inhand_at`, `payment_amount`, `quantity`, or`resource_version`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Sales"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user",
              "read:sales"
            ]
          }
        ]
      }
    },
    "/sales/{saleId}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get a sale",
        "operationId": "Sales_Get",
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user",
              "read:sales"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Sales"
        ],
        "summary": "Update a sale",
        "operationId": "Sales_Patch",
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PatchSaleRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user",
              "write:sales"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Sales"
        ],
        "summary": "Reject a sale",
        "description": "Report a problem with a sale of tickets.",
        "operationId": "Sales_Delete",
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user",
              "write:sales"
            ]
          }
        ]
      }
    },
    "/payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "List payments",
        "description": "Lists payments for the authenticated user.",
        "operationId": "Payments_GetPayments",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `created_at`, or`id`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Payments"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user",
              "read:payment"
            ]
          }
        ]
      }
    },
    "/payments/{paymentId}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Get a payment",
        "operationId": "Payments_Get",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user",
              "read:payment"
            ]
          }
        ]
      }
    },
    "/payments/next": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Preview next payment",
        "description": "Previews the next payment for the authenticated user. The payment will not have an `id` and is subject to changes.",
        "operationId": "Payments_GetNextPayment",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user",
              "read:payment"
            ]
          }
        ]
      }
    },
    "/salesaggregates": {
      "get": {
        "tags": [
          "SalesAggregates"
        ],
        "summary": "List sales aggregates",
        "description": "List aggregated sales data for the authenticated user.",
        "operationId": "SalesAggregates_GetSalesAggregates",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `sort_order`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/SalesAggregates"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user",
              "read:sales"
            ]
          }
        ]
      }
    },
    "/etickets/{eticketId}/thumbnail": {
      "get": {
        "tags": [
          "E-Tickets (Sales)"
        ],
        "summary": "Get e-ticket thumbnail file",
        "description": "Download an image file containing a thumbnail of an E-Ticket",
        "operationId": "ETicketDocument_GetETicketThumbnail",
        "parameters": [
          {
            "name": "eticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user"
            ]
          }
        ]
      }
    },
    "/eticketuploads/{eticketUploadId}/document": {
      "get": {
        "tags": [
          "E-Tickets (Sales)"
        ],
        "summary": "Get e-ticket upload file",
        "description": "Download the original file that was uploaded.",
        "operationId": "ETicketDocument_GetETicketUploadDocument",
        "parameters": [
          {
            "name": "eticketUploadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user"
            ]
          }
        ]
      }
    },
    "/etickets/{eticketId}/document": {
      "get": {
        "tags": [
          "E-Tickets (Sales)"
        ],
        "summary": "Get e-ticket file",
        "description": "Download a PDF file containing an E-Ticket.",
        "operationId": "ETicketDocument_GetETicketDocument",
        "parameters": [
          {
            "name": "eticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/markedbacketickets/{markedBackETicketId}/document": {
      "get": {
        "tags": [
          "E-Tickets (Inventory)"
        ],
        "summary": "Get marked back e-ticket file for seller listing",
        "operationId": "ETicketDocument_GetMarkedBackETicketDocument",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "markedBackETicketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      }
    },
    "/webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "List webhooks",
        "description": "List webhooks for the authenticated user.",
        "operationId": "Webhooks_Get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `created_at`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Webhooks"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:webhooks"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create a webhook",
        "operationId": "Webhooks_Post",
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostWebhookRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:webhooks"
            ]
          }
        ]
      }
    },
    "/webhooks/{webhookId}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get a webhook",
        "operationId": "Webhooks_Get2",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:webhooks"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Update a webhook",
        "operationId": "Webhooks_Patch",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PatchWebhookRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:webhooks"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete a webhook",
        "operationId": "Webhooks_Delete",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:webhooks"
            ]
          }
        ]
      }
    },
    "/webhooks/{webhookId}/ping": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Ping a webhook",
        "description": "Triggers a request to be sent to your webhook. Call this endpoint to test your webhook.",
        "operationId": "Webhooks_PingWebhook",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:webhooks"
            ]
          }
        ]
      }
    },
    "/addresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "List addresses",
        "description": "List addresses for the current user.",
        "operationId": "Addressess_GetUserAddresses",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `default`, or`id`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Addresses"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Addresses"
        ],
        "summary": "Create an address",
        "operationId": "Addressess_Post",
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostAddressRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Address2"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user"
            ]
          }
        ]
      }
    },
    "/addresses/{addressId}": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get an address",
        "operationId": "Addressess_Get",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Address2"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Addresses"
        ],
        "summary": "Update an address",
        "operationId": "Addressess_Patch",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PatchAddressRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Address2"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Addresses"
        ],
        "summary": "Delete an address",
        "operationId": "Addressess_Delete",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user"
            ]
          }
        ]
      }
    },
    "/paymentmethods": {
      "get": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "List payment methods",
        "description": "List payment methods for the authenticated user.",
        "operationId": "PaymentMethods_GetPaymentMethods",
        "parameters": [
          {
            "name": "buyer_method",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "seller_method",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PaymentMethods"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user"
            ]
          }
        ]
      }
    },
    "/paymentmethods/{paymentMethodId}": {
      "get": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "Get a payment method",
        "operationId": "PaymentMethods_GetPaymentMethod",
        "parameters": [
          {
            "name": "paymentMethodId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user"
            ]
          }
        ]
      }
    },
    "/listings/{listingId}/paymentmethods": {
      "put": {
        "tags": [
          "PaymentMethods"
        ],
        "summary": "List payment methods for a listing",
        "operationId": "PaymentMethods_GetListingPaymentMethods",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PutListingPaymentMethodsRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethods"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user"
            ]
          }
        ]
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the authenticated user",
        "operationId": "User_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/User"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update the authenticated user",
        "operationId": "User_Patch",
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PatchUserRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Currency": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "description": "The ISO 4217 currency code that identifies the currency.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the currency.",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "description": "The symbol that identifies the currency.",
            "nullable": true
          },
          "decimal_places": {
            "type": "integer",
            "description": "The number of decimal places used to represent amounts in the currency.",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyLinks"
              }
            ]
          }
        }
      },
      "CurrencyLinks": {
        "title": "CurrencyLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "Link": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "href": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "templated": {
            "type": "boolean"
          }
        }
      },
      "Error": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "Currencys": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencysLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencysEmbeddedResources"
              }
            ]
          }
        }
      },
      "CurrencysLinks": {
        "title": "CurrencysLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "CurrencysEmbeddedResources": {
        "title": "CurrencysEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          }
        }
      },
      "Category": {
        "type": "object",
        "description": "A Category represents a grouping of events or other categories. Examples are “Concerts”, “Rock and Pop” and “Lady Gaga”.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The category identifier.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the category.",
            "nullable": true
          },
          "description_html": {
            "type": "string",
            "description": "The localized string containing HTML markup that describes the category.",
            "nullable": true
          },
          "min_ticket_price": {
            "description": "The minimum ticket price of the events in this category.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "min_event_date": {
            "type": "string",
            "description": "The earliest start date of the events in this category.",
            "format": "date-time",
            "nullable": true
          },
          "max_event_date": {
            "type": "string",
            "description": "The latest start date of the events in this category.",
            "format": "date-time",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CategoryLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CategoryEmbeddedResources"
              }
            ]
          }
        }
      },
      "Money": {
        "type": "object",
        "description": "Returned for monetary values, such as ticket prices, fees charged and tax amounts.",
        "additionalProperties": false,
        "required": [
          "amount",
          "currency_code"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "description": "The decimal amount of the money.",
            "format": "decimal",
            "nullable": true
          },
          "currency_code": {
            "type": "string",
            "description": "The ISO 4217 currency code that the monetary value is represented in.",
            "nullable": true
          },
          "display": {
            "type": "string",
            "description": "A user-friendly string representing the monetary value.",
            "nullable": true
          }
        }
      },
      "CategoryLinks": {
        "title": "CategoryLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "category:children": {
            "description": "The direct descendants of this category.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "category:events": {
            "description": "The events in this category.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "category:image": {
            "description": "The image for this category.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "category:parent": {
            "description": "The parent of this category.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "category:performers": {
            "description": "The leaf descendants this category. These categories will be direct parents of events.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "category:webpage": {
            "description": "The webpage on the viagogo website for this category.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "CategoryEmbeddedResources": {
        "title": "CategoryEmbeddedResources",
        "type": "object",
        "properties": {
          "top_children": {
            "description": "A preview of the categories that are direct children of this category.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedCategorys"
              }
            ]
          },
          "top_events": {
            "description": "The most popular events in this category.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedEvents"
              }
            ]
          },
          "top_performers": {
            "description": "The most popular performers (leaf categories) that are children of this category.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedCategorys"
              }
            ]
          }
        }
      },
      "EmbeddedCategorys": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedCategorysLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedCategorysEmbeddedResources"
              }
            ]
          }
        }
      },
      "EmbeddedCategorysLinks": {
        "title": "EmbeddedCategorysLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "EmbeddedCategorysEmbeddedResources": {
        "title": "EmbeddedCategorysEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EmbeddedCategory"
            }
          }
        }
      },
      "EmbeddedCategory": {
        "type": "object",
        "description": "A Category represents a grouping of events or other categories. Examples are “Concerts”, “Rock and Pop” and “Lady Gaga”.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The category identifier.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the category.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedCategoryLinks"
              }
            ]
          }
        }
      },
      "EmbeddedCategoryLinks": {
        "title": "EmbeddedCategoryLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "category:image": {
            "description": "The image for this category.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "EmbeddedEvents": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedEventsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedEventsEmbeddedResources"
              }
            ]
          }
        }
      },
      "EmbeddedEventsLinks": {
        "title": "EmbeddedEventsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "EmbeddedEventsEmbeddedResources": {
        "title": "EmbeddedEventsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EmbeddedEvent"
            }
          }
        }
      },
      "EmbeddedEvent": {
        "type": "object",
        "description": "An event on the viagogo platform.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The event identifier.",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the event.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "The date when the event starts.",
            "format": "date-time",
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "description": "The date when the event ends.",
            "format": "date-time",
            "nullable": true
          },
          "on_sale_date": {
            "type": "string",
            "description": "The date when tickets for the event will go onsale.",
            "format": "date-time",
            "nullable": true
          },
          "date_confirmed": {
            "type": "boolean",
            "description": "True if the event start and end date have been confirmed; Otherwise, false.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedEventLinks"
              }
            ]
          }
        }
      },
      "EmbeddedEventLinks": {
        "title": "EmbeddedEventLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "Categories": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CategoriesLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CategoriesEmbeddedResources"
              }
            ]
          }
        }
      },
      "CategoriesLinks": {
        "title": "CategoriesLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "CategoriesEmbeddedResources": {
        "title": "CategoriesEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          }
        }
      },
      "Event": {
        "type": "object",
        "description": "An event on the viagogo platform.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The event identifier.",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the event.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "The date when the event starts.",
            "format": "date-time",
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "description": "The date when the event ends.",
            "format": "date-time",
            "nullable": true
          },
          "on_sale_date": {
            "type": "string",
            "description": "The date when tickets for the event will go onsale.",
            "format": "date-time",
            "nullable": true
          },
          "date_confirmed": {
            "type": "boolean",
            "description": "True if the event start and end date have been confirmed; Otherwise, false.",
            "nullable": true
          },
          "min_ticket_price": {
            "description": "The minimum ticket price of the event.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets currently available for this event.",
            "format": "int32",
            "nullable": true
          },
          "notes_html": {
            "type": "string",
            "description": "Localized string containing HTML markup that describes the notes for the event.",
            "nullable": true
          },
          "restrictions_html": {
            "type": "string",
            "description": "Localized string containing HTML markup that describes the purchase restrictions on the event.",
            "nullable": true
          },
          "affiliate_commission_tier": {
            "type": "string",
            "description": "The tier of commission paid to affiliates that market this event. Can be `Normal` or `Low`.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventEmbeddedResources"
              }
            ]
          }
        }
      },
      "EventLinks": {
        "title": "EventLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "event:category": {
            "description": "The category that contains this event.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "event:createsellerlisting": {
            "description": "Create a SellerListing for this event.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "event:listingconstraints": {
            "description": "The listing constraints for this event.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "event:listings": {
            "description": "The listings for this event.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "event:localwebpage": {
            "description": "The webpage on the local viagogo website for this event.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "event:sellerlistingpreview": {
            "description": "Creates a preview of a SellerListing for this event.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "event:webpage": {
            "description": "The webpage on the viagogo website for this event.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "EventEmbeddedResources": {
        "title": "EventEmbeddedResources",
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "description": "The categories for this event.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EmbeddedCategory"
            }
          },
          "category": {
            "description": "The category for this event.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedCategory"
              }
            ]
          },
          "genre": {
            "description": "The genre for this event.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedCategory"
              }
            ]
          },
          "venue": {
            "description": "The venue where the event is taking place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenue"
              }
            ]
          }
        }
      },
      "EmbeddedVenue": {
        "type": "object",
        "description": "A venue is a location where an event takes place.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The venue identifier.",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the venue.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The name of the city where the venue is located.",
            "nullable": true
          },
          "state_province": {
            "type": "string",
            "description": "The name of the State or Province where the venue is located.",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "description": "The latitude for the venue.",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "description": "The longitude for the venue.",
            "format": "double",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenueLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenueEmbeddedResources"
              }
            ]
          }
        }
      },
      "EmbeddedVenueLinks": {
        "title": "EmbeddedVenueLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "EmbeddedVenueEmbeddedResources": {
        "title": "EmbeddedVenueEmbeddedResources",
        "type": "object",
        "properties": {
          "country": {
            "description": "The Country where the venue is located.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          }
        }
      },
      "Country": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "description": "The two-letter ISO 3166 code for the country.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the country.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CountryLinks"
              }
            ]
          }
        }
      },
      "CountryLinks": {
        "title": "CountryLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "country:events": {
            "description": "The events taking place in a country.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "country:localwebpage": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "Events": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventsEmbeddedResources"
              }
            ]
          }
        }
      },
      "EventsLinks": {
        "title": "EventsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "EventsEmbeddedResources": {
        "title": "EventsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "Venue": {
        "type": "object",
        "description": "A venue is a location where an event takes place.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The venue identifier.",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the venue.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The name of the city where the venue is located.",
            "nullable": true
          },
          "state_province": {
            "type": "string",
            "description": "The name of the State or Province where the venue is located.",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "description": "The latitude for the venue.",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "description": "The longitude for the venue.",
            "format": "double",
            "nullable": true
          },
          "address_1": {
            "type": "string",
            "description": "The first line of the address for the venue.",
            "nullable": true
          },
          "address_2": {
            "type": "string",
            "description": "The second line of the address for the venue.",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "description": "The postal code for the venue.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VenueLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VenueEmbeddedResources"
              }
            ]
          }
        }
      },
      "VenueLinks": {
        "title": "VenueLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "venue:events": {
            "description": "The events taking place in a venue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "venue:metroarea": {
            "description": "The metro area where a venue is located.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "VenueEmbeddedResources": {
        "title": "VenueEmbeddedResources",
        "type": "object",
        "properties": {
          "country": {
            "description": "The Country where the venue is located.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          }
        }
      },
      "Venues": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VenuesLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VenuesEmbeddedResources"
              }
            ]
          }
        }
      },
      "VenuesLinks": {
        "title": "VenuesLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "VenuesEmbeddedResources": {
        "title": "VenuesEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Venue"
            }
          }
        }
      },
      "MetroArea": {
        "type": "object",
        "description": "A MetroArea is a metropolitan region that contains venues where events are taking place.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The metro area identifier.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the metro area.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetroAreaLinks"
              }
            ]
          }
        }
      },
      "MetroAreaLinks": {
        "title": "MetroAreaLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "metroarea:events": {
            "description": "The events taking place in a metro area.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "metroarea:venues": {
            "description": "The venues located in a metro area.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "MetroAreas": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetroAreasLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetroAreasEmbeddedResources"
              }
            ]
          }
        }
      },
      "MetroAreasLinks": {
        "title": "MetroAreasLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "MetroAreasEmbeddedResources": {
        "title": "MetroAreasEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MetroArea"
            }
          }
        }
      },
      "Listings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListingsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListingsEmbeddedResources"
              }
            ]
          }
        }
      },
      "ListingsLinks": {
        "title": "ListingsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ListingsEmbeddedResources": {
        "title": "ListingsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Listing"
            }
          }
        }
      },
      "Listing": {
        "type": "object",
        "description": "A set of tickets for sale on the viagogo marketplace.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The lisitng indentifier.",
            "format": "int64",
            "nullable": true
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "seating": {
            "description": "The seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "pickup_available": {
            "type": "boolean",
            "description": "True if the tickets can be picked up at the event; otherwise , false.",
            "nullable": true
          },
          "download_available": {
            "type": "boolean",
            "description": "True if the listing has a pre-uploaded E-Ticket; otherwise, false.",
            "nullable": true
          },
          "ticket_price": {
            "description": "The price of each ticket in the listing in the currency that they were listed in.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "estimated_ticket_price": {
            "description": "The estimated price of each ticket in the currency requested by the client.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "estimated_total_ticket_price": {
            "description": "The estimated total price for all tickets in the currency requested by the client.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "estimated_booking_fee": {
            "description": "The estimated booking fee applied when the tickets are purchased, in the currency requested by the client.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "estimated_shipping": {
            "description": "The estimated shipping charge applied when the tickets are purchased, in the currency requested by the client.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "estimated_vat": {
            "description": "The estimated VAT charge applied when the tickets are purchased, in the currency requested by the client.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "estimated_total_charge": {
            "description": "The estimated total charge applied when the tickets are purchased, in the currency requested by the client.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListingLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListingEmbeddedResources"
              }
            ]
          }
        }
      },
      "Seating": {
        "type": "object",
        "description": "Represents the seating information for a ticket(s) in a Venue.",
        "additionalProperties": false,
        "required": [
          "section"
        ],
        "properties": {
          "section": {
            "type": "string",
            "description": "The section of the ticket(s).",
            "nullable": true
          },
          "row": {
            "type": "string",
            "description": "The row of the ticket(s).",
            "nullable": true
          },
          "seat_from": {
            "type": "string",
            "description": "The first in a contiguous block of seats to which the tickets have been allocated.",
            "nullable": true
          },
          "seat_to": {
            "type": "string",
            "description": "The last in a contiguous block of seats to which the tickets have been allocated.",
            "nullable": true
          }
        }
      },
      "ListingLinks": {
        "title": "ListingLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "listing:event": {
            "description": "The event for this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "listing:localwebpage": {
            "description": "The webpage on the local viagogo website where a listing can be purchased.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "listing:sellerlisting": {
            "description": "The associated SellerListing for the listing, if it belongs to the currently authenticated user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "listing:webpage": {
            "description": "The webpage on the viagogo website for this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ListingEmbeddedResources": {
        "title": "ListingEmbeddedResources",
        "type": "object",
        "properties": {
          "listing_notes": {
            "type": "array",
            "description": "The listing notes for this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ListingNote"
            }
          },
          "ticket_type": {
            "description": "The type of ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TicketType"
              }
            ]
          }
        }
      },
      "ListingNote": {
        "type": "object",
        "description": "Provides additional notes on a listing",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The listing note identifier.",
            "format": "int32",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "The localized note.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListingNoteLinks"
              }
            ]
          }
        }
      },
      "ListingNoteLinks": {
        "title": "ListingNoteLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "TicketType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TicketTypeLinks"
              }
            ]
          }
        }
      },
      "TicketTypeLinks": {
        "title": "TicketTypeLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SearchResults": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SearchResultsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SearchResultsEmbeddedResources"
              }
            ]
          }
        }
      },
      "SearchResultsLinks": {
        "title": "SearchResultsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SearchResultsEmbeddedResources": {
        "title": "SearchResultsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SearchResult"
            }
          }
        }
      },
      "SearchResult": {
        "type": "object",
        "description": "A SearchResult resource represents a single result of a search.",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "description": "The localized name of the search result.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of the search result. Can be `Event`, `Category`, `Venue` or `MetroArea`.",
            "nullable": true
          },
          "type_description": {
            "type": "string",
            "description": "The localized text describing the type of the search result.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SearchResultLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SearchResultEmbeddedResources"
              }
            ]
          }
        }
      },
      "SearchResultLinks": {
        "title": "SearchResultLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "searchresult:category": {
            "description": "The category that a search result represents.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "searchresult:event": {
            "description": "The event that a search result represents.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "searchresult:metroarea": {
            "description": "The metro area that a search result represents.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "searchresult:venue": {
            "description": "The venue that a search result represents.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SearchResultEmbeddedResources": {
        "title": "SearchResultEmbeddedResources",
        "type": "object",
        "properties": {
          "category": {
            "description": "The category that a search result represents.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedCategory"
              }
            ]
          },
          "event": {
            "description": "The event that a search result represents.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedEvent"
              }
            ]
          },
          "genre": {
            "description": "The genre of the category that a search result represents.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedCategory"
              }
            ]
          },
          "metro_area": {
            "description": "The metro area that a search result represents.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetroArea"
              }
            ]
          },
          "venue": {
            "description": "The venue that a search result represents.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenue"
              }
            ]
          }
        }
      },
      "ApiRoot": {
        "type": "object",
        "description": "The root of the viagogo API service. Applications can use the links provided by this resource to find all other resources in the API.",
        "additionalProperties": false,
        "properties": {
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApiRootLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApiRootEmbeddedResources"
              }
            ]
          }
        }
      },
      "ApiRootLinks": {
        "title": "ApiRootLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "viagogo:countries": {
            "description": "The available countries.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "viagogo:createsellerlisting": {
            "description": "Create a seller listing for an event.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "viagogo:currencies": {
            "description": "The available currencies.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "viagogo:genres": {
            "description": "The top-level categories that group all other categories and events.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "viagogo:languages": {
            "description": "The available languages.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "viagogo:listingconstraints": {
            "description": "The listing constraints for a requested event.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "viagogo:metroareas": {
            "description": "The available metro areas.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "viagogo:search": {
            "description": "Search for events, categories, venues and metro areas.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "viagogo:user": {
            "description": "The currently authenticated user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "viagogo:venues": {
            "description": "The available venues.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ApiRootEmbeddedResources": {
        "title": "ApiRootEmbeddedResources",
        "type": "object",
        "properties": {
          "user": {
            "description": "The currently authenticated user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          }
        }
      },
      "User": {
        "type": "object",
        "description": "An authenticated user.",
        "additionalProperties": false,
        "properties": {
          "full_name": {
            "type": "string",
            "description": "The full name of the user.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email address of the user.",
            "nullable": true
          },
          "primary_phone": {
            "type": "string",
            "description": "The primary phone number of the user.",
            "nullable": true
          },
          "email_optin": {
            "type": "boolean",
            "description": "True if the user is signed up for the viagogo email newsletter; otherwise, false."
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserLinks"
              }
            ]
          }
        }
      },
      "UserLinks": {
        "title": "UserLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "user:addresses": {
            "description": "The collection of Addresses associated with this user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "user:paymentmethods": {
            "description": "The collection of PaymentMethods associated with this user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "user:sales": {
            "description": "The collection of Sales associated with this user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "user:salesaggregates": {
            "description": "The aggregated sales data associated with this user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "user:sellerlistings": {
            "description": "The collection of SellerListings associated with this user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "user:update": {
            "description": "Update the settings for this user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "user:webhooks": {
            "description": "The collection of Webhooks associated with this user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SellerListing": {
        "type": "object",
        "description": "A set of tickets for sale on the viagogo marketplace that belong to the currently authenticated user.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The listing identifier.",
            "format": "int64",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "The date when the listing was created.",
            "format": "date-time",
            "nullable": true
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "seating": {
            "description": "The seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "display_seating": {
            "description": "The seating information that will be displayed to buyers for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "ticket_price": {
            "description": "The price of each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "updated_at": {
            "type": "string",
            "description": "The date when the listing was last updated.",
            "format": "date-time",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "description": "An identifier that has been assigned to the listing in an external inventory management system.",
            "nullable": true
          },
          "expires_at": {
            "type": "string",
            "description": "The date when the listing will be automatically unpublished from the marketplace.",
            "format": "date-time",
            "nullable": true
          },
          "display_number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets that should be displayed to buyers as available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "face_value": {
            "description": "The price printed on the ticket, not including any booking fees.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_proceeds": {
            "description": "The amount that the seller will receive for each ticket sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "in_hand_at": {
            "type": "string",
            "description": "The date when the seller will have the tickets in hand.",
            "format": "date-time",
            "nullable": true
          },
          "barcodes": {
            "type": "array",
            "description": "Barcode(s) for the ticket(s) in this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BarcodeInformation"
            }
          },
          "instant_delivery": {
            "type": "boolean",
            "nullable": true
          },
          "purchase_price_per_ticket": {
            "description": "The purchase price paid by the seller for each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "total_purchase_price": {
            "description": "The total purchase price paid by the seller.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "sales_tax_paid": {
            "type": "boolean",
            "description": "True if the seller already paid sales tax for the ticket(s); otherwise, false.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerListingLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerListingEmbeddedResources"
              }
            ]
          }
        }
      },
      "BarcodeInformation": {
        "type": "object",
        "description": "A set of barcodes for a seat.",
        "additionalProperties": false,
        "properties": {
          "seat_ordinal": {
            "type": "integer",
            "description": "An ordinal number for a seat.",
            "format": "int32",
            "nullable": true
          },
          "seat": {
            "type": "string",
            "description": "Seat number.",
            "nullable": true
          },
          "row": {
            "type": "string",
            "description": "Row of ticket.",
            "nullable": true
          },
          "barcode_values": {
            "type": "array",
            "description": "Barcode(s) for this seat.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SellerListingLinks": {
        "title": "SellerListingLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "event:createsellerlisting": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:constraints": {
            "description": "The constraints applied to this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:contactuswebpage": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:delete": {
            "description": "Delete a listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:etickets": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:eticketuploads": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:lmsoptin": {
            "description": "Opt this listing into Last Minute Sales.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:lmsoptout": {
            "description": "Opt this listing out of Last Minute Sales.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:lmspickup": {
            "description": "The pickup instructions for Last Minute Sales.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:optionalverificationrequests": {
            "description": "The VerificationRequests that can be resolved in order for the\nlisting to be published on some viagogo websites.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:pricing": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:publish": {
            "description": "Make seller listing available for purchase.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:saveetickets": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:shipments": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:ticketlocation": {
            "description": "The address where the ticket(s) are located.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:unpublish": {
            "description": "Make the listing unavailable for purchase.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updatedisplaynumberoftickets": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updatefacevalue": {
            "description": "Update face value for this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updateinhandat": {
            "description": "Update the date the seller will have tickets for this listing in hand.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updatenotes": {
            "description": "Update notes for this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updatenumberoftickets": {
            "description": "Update number of tickets available for purchase.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updatepreview": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updateseating": {
            "description": "Update the seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updatesplittype": {
            "description": "Update the way the ticket(s) are allowed to be split up when sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updateticketlocation": {
            "description": "Update the address where the ticket(s) are located.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updateticketprice": {
            "description": "Update the price of each ticket in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updatetickettype": {
            "description": "Update the type of ticket(s) for this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:uploadeticket": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:verificationrequests": {
            "description": "The VerificationRequests that must be resolved in order for the\nlisting to be published on all viagogo websites.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:webpage": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SellerListingEmbeddedResources": {
        "title": "SellerListingEmbeddedResources",
        "type": "object",
        "properties": {
          "constraints": {
            "description": "The constraints applied to this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListingConstraints"
              }
            ]
          },
          "event": {
            "description": "The event for this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedEvent"
              }
            ]
          },
          "listing_notes": {
            "type": "array",
            "description": "The notes for this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ListingNote"
            }
          },
          "split_type": {
            "description": "The way that the ticket(s) are allowed to be split up when sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SplitType"
              }
            ]
          },
          "ticket_type": {
            "description": "The type of ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TicketType"
              }
            ]
          },
          "venue": {
            "description": "The venue where the event is taking place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenue"
              }
            ]
          }
        }
      },
      "ListingConstraints": {
        "type": "object",
        "description": "The constraints applied to a listing for a particular event on the viagogo marketplace.",
        "additionalProperties": false,
        "properties": {
          "min_ticket_price": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "max_ticket_price": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "min_number_of_tickets": {
            "type": "integer",
            "description": "The minimum number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "max_number_of_tickets": {
            "type": "integer",
            "description": "The maximum number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "ticket_location_required": {
            "type": "boolean",
            "description": "True if a ticket location is required for tickets; Otherwise, false.",
            "nullable": true
          },
          "seats_required": {
            "type": "boolean",
            "description": "True if seat-level information (seat_to and seat_from) is required; Otherwise, false.",
            "nullable": true
          },
          "sections": {
            "type": "array",
            "description": "The valid section and row information. If no sections are specified then any text will be accepted for section and row.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Section"
            }
          },
          "primary_order_id_required": {
            "type": "boolean",
            "nullable": true
          },
          "home_or_away_required": {
            "type": "boolean",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListingConstraintsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListingConstraintsEmbeddedResources"
              }
            ]
          }
        }
      },
      "Section": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "free_text_row": {
            "type": "boolean"
          },
          "queue_number_row": {
            "type": "boolean"
          },
          "rows": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Row"
            }
          }
        }
      },
      "Row": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ListingConstraintsLinks": {
        "title": "ListingConstraintsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ListingConstraintsEmbeddedResources": {
        "title": "ListingConstraintsEmbeddedResources",
        "type": "object",
        "properties": {
          "connected_seller_listing_notes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ListingNote"
            }
          },
          "currencies": {
            "type": "array",
            "description": "The valid currencies for the listing ticket price.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          },
          "listing_notes": {
            "type": "array",
            "description": "The available notes for this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ListingNote"
            }
          },
          "required_unique_listing_notes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ListingNote"
            }
          },
          "restricted_on_use_listing_notes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ListingNote"
            }
          },
          "split_types": {
            "type": "array",
            "description": "The way that tickets are allowed to be split up when sold.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SplitType"
            }
          },
          "ticket_types": {
            "type": "array",
            "description": "The valid types of tickets.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TicketType"
            }
          }
        }
      },
      "SplitType": {
        "type": "object",
        "description": "The way that the ticket(s) in a listing are allowed to be split up when sold.",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of split. Can be Any, None, AvoidOne, AvoidOneAndThree, or Pairs.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The localised name of the type of split.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The localised description of the split.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SplitTypeLinks"
              }
            ]
          }
        }
      },
      "SplitTypeLinks": {
        "title": "SplitTypeLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "PatchSellerListingRequest": {
        "type": "object",
        "description": "A set of tickets for sale on the viagogo marketplace that belong to the currently authenticated user.",
        "additionalProperties": false,
        "properties": {
          "ticket_price": {
            "description": "The price of each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_proceeds": {
            "description": "The amount that the seller will receive for each ticket sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "seating": {
            "description": "The seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "face_value": {
            "description": "The price printed on the ticket, not including any booking fees.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_type": {
            "type": "string",
            "description": "The type of ticket(s) in this listing.",
            "nullable": true
          },
          "split_type": {
            "type": "string",
            "description": "The way that the ticket(s) are allowed to be split up when sold.",
            "nullable": true
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "display_number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets that should be displayed to buyers as available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "ticket_location_address_id": {
            "type": "integer",
            "description": "The identifier of the address where the ticket(s) are located.",
            "format": "int32",
            "nullable": true
          },
          "listing_note_ids": {
            "type": "array",
            "description": "An array of listing note identifiers that provides additional notes on the listing",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "in_hand_at": {
            "type": "string",
            "description": "The date when the seller will have the tickets in hand.",
            "format": "date-time",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "description": "An identifier that has been assigned to the listing in an external inventory management system.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "A comma-separated string of additional notes about the listing",
            "nullable": true
          },
          "instant_delivery": {
            "type": "boolean",
            "nullable": true
          },
          "published": {
            "type": "boolean",
            "description": "True when the listing should be published; Otherwise, false.",
            "nullable": true
          },
          "lms_optin": {
            "type": "boolean",
            "description": "True when the listing should be opted into Last Minute Sales; Otherwise, false.",
            "nullable": true
          },
          "eticket_ids": {
            "type": "array",
            "description": "A array of the identifiers of the E-Tickets to be assigned to the listing.",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "external_event_information": {
            "type": "array",
            "description": "Information about the listing's event on other platforms.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SellerListingExternalEventInformation"
            }
          },
          "purchase_price_per_ticket": {
            "description": "The purchase price paid by the seller for each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "total_purchase_price": {
            "description": "The total purchase price paid by the seller.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "sales_tax_paid": {
            "type": "boolean",
            "description": "True if the seller already paid sales tax for the ticket(s); otherwise, false.",
            "nullable": true
          },
          "barcodes": {
            "type": "array",
            "description": "Barcode(s) for the ticket(s) in this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BarcodeInformation"
            }
          }
        }
      },
      "Reservation": {
        "type": "object",
        "description": "Reservation details of a sale or a listing.",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReservationStore"
              }
            ]
          },
          "expiry_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "release_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pin": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ReservationStore": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "regex": {
            "type": "string",
            "nullable": true
          },
          "pin_required": {
            "type": "boolean"
          },
          "code_required": {
            "type": "boolean"
          }
        }
      },
      "SellerListingAdditionalInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "primary_order_id": {
            "type": "string",
            "nullable": true
          },
          "home_or_away": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HomeOrAway"
              }
            ]
          },
          "is_seated": {
            "type": "boolean",
            "nullable": true
          },
          "missing_seating_reason_type_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ab_tests": {
            "type": "string",
            "nullable": true
          },
          "pcid": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "HomeOrAway": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "Home",
          "Away"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "SellerListingExternalEventInformation": {
        "type": "object",
        "description": "Information about the listing's event on other platforms.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "An identifier for the event on an external platform.",
            "format": "int32"
          },
          "platform": {
            "type": "string",
            "description": "The name of the external platform.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The URL of the event on the external platform.",
            "nullable": true
          },
          "venue_id": {
            "type": "integer",
            "description": "An identifier for the event's venue on an external platform.",
            "format": "int32",
            "nullable": true
          },
          "performer_id": {
            "type": "integer",
            "description": "An identifier for the event's category on an external platform.",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "SellerListings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerListingsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerListingsEmbeddedResources"
              }
            ]
          }
        }
      },
      "SellerListingsLinks": {
        "title": "SellerListingsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SellerListingsEmbeddedResources": {
        "title": "SellerListingsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SellerListing"
            }
          }
        }
      },
      "PostSellerListingPreviewRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "seating",
          "ticket_type",
          "split_type",
          "number_of_tickets"
        ],
        "properties": {
          "ticket_price": {
            "description": "The price of each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_proceeds": {
            "description": "The amount that the seller will receive for each ticket sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "seating": {
            "description": "The seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "face_value": {
            "description": "The price printed on the ticket, not including any booking fees.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_type": {
            "type": "string",
            "description": "The type of ticket(s) in this listing.",
            "nullable": true
          },
          "split_type": {
            "type": "string",
            "description": "The way that the ticket(s) are allowed to be split up when sold.",
            "nullable": true
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "display_number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets that should be displayed to buyers as available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "ticket_location_address_id": {
            "type": "integer",
            "description": "The identifier of the address where the ticket(s) are located.",
            "format": "int32",
            "nullable": true
          },
          "listing_note_ids": {
            "type": "array",
            "description": "An array of listing note identifiers that provides additional notes on the listing",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "in_hand_at": {
            "type": "string",
            "description": "The date when the seller will have the tickets in hand.",
            "format": "date-time",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "description": "An identifier that has been assigned to the listing in an external inventory management system.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "A comma-separated string of additional notes about the listing",
            "nullable": true
          },
          "instant_delivery": {
            "type": "boolean",
            "nullable": true
          },
          "published": {
            "type": "boolean",
            "description": "True when the listing should be published; Otherwise, false.",
            "nullable": true
          },
          "lms_optin": {
            "type": "boolean",
            "description": "True when the listing should be opted into Last Minute Sales; Otherwise, false.",
            "nullable": true
          },
          "eticket_ids": {
            "type": "array",
            "description": "A array of the identifiers of the E-Tickets to be assigned to the listing.",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "external_event_information": {
            "type": "array",
            "description": "Information about the listing's event on other platforms.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SellerListingExternalEventInformation"
            }
          },
          "purchase_price_per_ticket": {
            "description": "The purchase price paid by the seller for each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "total_purchase_price": {
            "description": "The total purchase price paid by the seller.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "sales_tax_paid": {
            "type": "boolean",
            "description": "True if the seller already paid sales tax for the ticket(s); otherwise, false.",
            "nullable": true
          },
          "barcodes": {
            "type": "array",
            "description": "Barcode(s) for the ticket(s) in this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BarcodeInformation"
            }
          }
        }
      },
      "PostRequestedEventSellerListingPreviewRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "seating",
          "ticket_type",
          "split_type",
          "number_of_tickets"
        ],
        "properties": {
          "event": {
            "description": "The event information.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventRequest"
              }
            ]
          },
          "venue": {
            "description": "The venue where the event will take place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenue"
              }
            ]
          },
          "country": {
            "description": "The country where the event will take place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          },
          "ticket_price": {
            "description": "The price of each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_proceeds": {
            "description": "The amount that the seller will receive for each ticket sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "seating": {
            "description": "The seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "face_value": {
            "description": "The price printed on the ticket, not including any booking fees.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_type": {
            "type": "string",
            "description": "The type of ticket(s) in this listing.",
            "nullable": true
          },
          "split_type": {
            "type": "string",
            "description": "The way that the ticket(s) are allowed to be split up when sold.",
            "nullable": true
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "display_number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets that should be displayed to buyers as available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "ticket_location_address_id": {
            "type": "integer",
            "description": "The identifier of the address where the ticket(s) are located.",
            "format": "int32",
            "nullable": true
          },
          "listing_note_ids": {
            "type": "array",
            "description": "An array of listing note identifiers that provides additional notes on the listing",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "in_hand_at": {
            "type": "string",
            "description": "The date when the seller will have the tickets in hand.",
            "format": "date-time",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "description": "An identifier that has been assigned to the listing in an external inventory management system.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "A comma-separated string of additional notes about the listing",
            "nullable": true
          },
          "instant_delivery": {
            "type": "boolean",
            "nullable": true
          },
          "published": {
            "type": "boolean",
            "description": "True when the listing should be published; Otherwise, false.",
            "nullable": true
          },
          "lms_optin": {
            "type": "boolean",
            "description": "True when the listing should be opted into Last Minute Sales; Otherwise, false.",
            "nullable": true
          },
          "eticket_ids": {
            "type": "array",
            "description": "A array of the identifiers of the E-Tickets to be assigned to the listing.",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "external_event_information": {
            "type": "array",
            "description": "Information about the listing's event on other platforms.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SellerListingExternalEventInformation"
            }
          },
          "purchase_price_per_ticket": {
            "description": "The purchase price paid by the seller for each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "total_purchase_price": {
            "description": "The total purchase price paid by the seller.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "sales_tax_paid": {
            "type": "boolean",
            "description": "True if the seller already paid sales tax for the ticket(s); otherwise, false.",
            "nullable": true
          },
          "barcodes": {
            "type": "array",
            "description": "Barcode(s) for the ticket(s) in this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BarcodeInformation"
            }
          }
        }
      },
      "EventRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the event.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "The date when the event starts.",
            "nullable": true
          },
          "date_confirmed": {
            "type": "boolean",
            "description": "True if the event start and end date have been confirmed; Otherwise, false.",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "Additional notes on the event.",
            "nullable": true
          }
        }
      },
      "PostRequestedEventSellerListingRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "seating",
          "ticket_type",
          "split_type",
          "number_of_tickets"
        ],
        "properties": {
          "ticket_price": {
            "description": "The price of each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_proceeds": {
            "description": "The amount that the seller will receive for each ticket sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "seating": {
            "description": "The seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "face_value": {
            "description": "The price printed on the ticket, not including any booking fees.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_type": {
            "type": "string",
            "description": "The type of ticket(s) in this listing.",
            "nullable": true
          },
          "split_type": {
            "type": "string",
            "description": "The way that the ticket(s) are allowed to be split up when sold.",
            "nullable": true
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "display_number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets that should be displayed to buyers as available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "ticket_location_address_id": {
            "type": "integer",
            "description": "The identifier of the address where the ticket(s) are located.",
            "format": "int32",
            "nullable": true
          },
          "listing_note_ids": {
            "type": "array",
            "description": "An array of listing note identifiers that provides additional notes on the listing",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "in_hand_at": {
            "type": "string",
            "description": "The date when the seller will have the tickets in hand.",
            "format": "date-time",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "description": "An identifier that has been assigned to the listing in an external inventory management system.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "A comma-separated string of additional notes about the listing",
            "nullable": true
          },
          "instant_delivery": {
            "type": "boolean",
            "nullable": true
          },
          "published": {
            "type": "boolean",
            "description": "True when the listing should be published; Otherwise, false.",
            "nullable": true
          },
          "lms_optin": {
            "type": "boolean",
            "description": "True when the listing should be opted into Last Minute Sales; Otherwise, false.",
            "nullable": true
          },
          "eticket_ids": {
            "type": "array",
            "description": "A array of the identifiers of the E-Tickets to be assigned to the listing.",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "external_event_information": {
            "type": "array",
            "description": "Information about the listing's event on other platforms.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SellerListingExternalEventInformation"
            }
          },
          "purchase_price_per_ticket": {
            "description": "The purchase price paid by the seller for each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "total_purchase_price": {
            "description": "The total purchase price paid by the seller.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "sales_tax_paid": {
            "type": "boolean",
            "description": "True if the seller already paid sales tax for the ticket(s); otherwise, false.",
            "nullable": true
          },
          "barcodes": {
            "type": "array",
            "description": "Barcode(s) for the ticket(s) in this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BarcodeInformation"
            }
          },
          "event": {
            "description": "The event information.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventRequest"
              }
            ]
          },
          "venue": {
            "description": "The venue where the event will take place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenue"
              }
            ]
          },
          "country": {
            "description": "The country where the event will take place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          }
        }
      },
      "PostSellerListingRequest": {
        "type": "object",
        "description": "A set of tickets for sale on the viagogo marketplace that belong to the currently authenticated user.",
        "additionalProperties": false,
        "required": [
          "seating",
          "ticket_type",
          "split_type",
          "number_of_tickets"
        ],
        "properties": {
          "ticket_price": {
            "description": "The price of each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_proceeds": {
            "description": "The amount that the seller will receive for each ticket sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "seating": {
            "description": "The seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "face_value": {
            "description": "The price printed on the ticket, not including any booking fees.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_type": {
            "type": "string",
            "description": "The type of ticket(s) in this listing.",
            "nullable": true
          },
          "split_type": {
            "type": "string",
            "description": "The way that the ticket(s) are allowed to be split up when sold.",
            "nullable": true
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "display_number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets that should be displayed to buyers as available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "ticket_location_address_id": {
            "type": "integer",
            "description": "The identifier of the address where the ticket(s) are located.",
            "format": "int32",
            "nullable": true
          },
          "listing_note_ids": {
            "type": "array",
            "description": "An array of listing note identifiers that provides additional notes on the listing",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "in_hand_at": {
            "type": "string",
            "description": "The date when the seller will have the tickets in hand.",
            "format": "date-time",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "description": "An identifier that has been assigned to the listing in an external inventory management system.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "A comma-separated string of additional notes about the listing",
            "nullable": true
          },
          "instant_delivery": {
            "type": "boolean",
            "nullable": true
          },
          "published": {
            "type": "boolean",
            "description": "True when the listing should be published; Otherwise, false.",
            "nullable": true
          },
          "lms_optin": {
            "type": "boolean",
            "description": "True when the listing should be opted into Last Minute Sales; Otherwise, false.",
            "nullable": true
          },
          "eticket_ids": {
            "type": "array",
            "description": "A array of the identifiers of the E-Tickets to be assigned to the listing.",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "external_event_information": {
            "type": "array",
            "description": "Information about the listing's event on other platforms.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SellerListingExternalEventInformation"
            }
          },
          "purchase_price_per_ticket": {
            "description": "The purchase price paid by the seller for each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "total_purchase_price": {
            "description": "The total purchase price paid by the seller.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "sales_tax_paid": {
            "type": "boolean",
            "description": "True if the seller already paid sales tax for the ticket(s); otherwise, false.",
            "nullable": true
          },
          "barcodes": {
            "type": "array",
            "description": "Barcode(s) for the ticket(s) in this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BarcodeInformation"
            }
          }
        }
      },
      "PutRequestedEventRequest": {
        "type": "object",
        "description": "A requested event.",
        "additionalProperties": false,
        "properties": {
          "event": {
            "description": "The event information.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventRequest"
              }
            ]
          },
          "venue": {
            "description": "The venue where the event will take place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenue"
              }
            ]
          },
          "country": {
            "description": "The country where the event will take place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          }
        }
      },
      "SellerEvents": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerEventsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerEventsEmbeddedResources"
              }
            ]
          }
        }
      },
      "SellerEventsLinks": {
        "title": "SellerEventsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SellerEventsEmbeddedResources": {
        "title": "SellerEventsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SellerEvent"
            }
          }
        }
      },
      "SellerEvent": {
        "type": "object",
        "description": "An event on the viagogo marketplace with listings that belong to the currently authenticated user.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The event identifier.",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the event.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "The date when the event starts.",
            "format": "date-time",
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "description": "The date when the event ends.",
            "format": "date-time",
            "nullable": true
          },
          "on_sale_date": {
            "type": "string",
            "description": "The date when tickets for the event will go onsale.",
            "format": "date-time",
            "nullable": true
          },
          "date_confirmed": {
            "type": "boolean",
            "description": "True if the event start and end date have been confirmed; Otherwise, false.",
            "nullable": true
          },
          "lms": {
            "type": "boolean",
            "description": "True if the event is a last minute sale event; otherwise, false.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerEventLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerEventEmbeddedResources"
              }
            ]
          }
        }
      },
      "SellerEventLinks": {
        "title": "SellerEventLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerevent:createsellerlisting": {
            "description": "Create listing for the currently authenticated user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerevent:sellerlistings": {
            "description": "Event listings that belong to the currently authenticated user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SellerEventEmbeddedResources": {
        "title": "SellerEventEmbeddedResources",
        "type": "object",
        "properties": {
          "sales_aggregates": {
            "type": "array",
            "description": "The currently authenticated user's aggregated sales data for this event.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SalesAggregate"
            }
          },
          "venue": {
            "description": "Event venue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenue"
              }
            ]
          }
        }
      },
      "SalesAggregate": {
        "type": "object",
        "description": "Aggregated sales data for the currently authenticated user.",
        "additionalProperties": false,
        "properties": {
          "number_of_sales": {
            "type": "integer",
            "description": "The total number of sales aggregated in this resource.",
            "format": "int32"
          },
          "proceeds": {
            "description": "The total amount that the seller will receive for the sale.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The total number of tickets for the sales aggregated in this resource.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "A short localised string describing the current status of the aggregated sales.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SalesAggregateLinks"
              }
            ]
          }
        }
      },
      "DistinctAggregates": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "categories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DistinctAggregate"
            }
          },
          "venues": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DistinctAggregate"
            }
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DistinctAggregatesLinks"
              }
            ]
          }
        }
      },
      "DistinctAggregate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DistinctAggregatesLinks": {
        "title": "DistinctAggregatesLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SalesAggregateLinks": {
        "title": "SalesAggregateLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "salesaggregate:sales": {
            "description": "The sales aggregated in this resource.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "Shipments": {
        "type": "object",
        "description": "The Shipments resource is a collection resource that contains zero or\nmore references to a set of shipments, and links that guide you on ways\nto interact with the shipments. The collection offers a paginated view\nof shipments.",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShipmentsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShipmentsEmbeddedResources"
              }
            ]
          }
        }
      },
      "ShipmentsLinks": {
        "title": "ShipmentsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "shipment:create": {
            "description": "Creates a new shipment for the ticket(s).",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ShipmentsEmbeddedResources": {
        "title": "ShipmentsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Shipment"
            }
          }
        }
      },
      "Shipment": {
        "type": "object",
        "description": "A shipment of one or more tickets by a seller.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The shipment identifier.",
            "format": "int32"
          },
          "tracking_number": {
            "type": "string",
            "description": "The identifier used to track the shipment of the ticket(s).",
            "nullable": true
          },
          "delivery_address": {
            "description": "The address that the seller must ship the tickets to.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShipmentLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShipmentEmbeddedResources"
              }
            ]
          }
        }
      },
      "Address": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "full_name": {
            "type": "string",
            "nullable": true
          },
          "address_1": {
            "type": "string",
            "nullable": true
          },
          "address_2": {
            "type": "string",
            "nullable": true
          },
          "address_3": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state_province": {
            "type": "string",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ShipmentLinks": {
        "title": "ShipmentLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "shipment:entertrackingnumber": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "shipment:label": {
            "description": "A courier shipping label.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ShipmentEmbeddedResources": {
        "title": "ShipmentEmbeddedResources",
        "type": "object",
        "properties": {
          "delivery_method": {
            "description": "The delivery method for the ticket(s).",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedDeliveryMethod"
              }
            ]
          },
          "pickup_addresses": {
            "type": "array",
            "description": "The addresses where courier pickups could be arranged.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Address2"
            }
          },
          "pickups": {
            "type": "array",
            "description": "The courier pickups that have been scheduled.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Pickup"
            }
          },
          "shipment_state": {
            "description": "The shipment state",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateInformation"
              }
            ]
          }
        }
      },
      "EmbeddedDeliveryMethod": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The delivery method identifier.",
            "format": "int32"
          },
          "type": {
            "description": "The type of delivery method. Can be ETicket, Post or Pickup.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeliveryMethodType"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "The localised name of the delivery method.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The localised description of the delivery method.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedDeliveryMethodLinks"
              }
            ]
          }
        }
      },
      "DeliveryMethodType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Other",
          "Post",
          "Pickup",
          "ETicket"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "EmbeddedDeliveryMethodLinks": {
        "title": "EmbeddedDeliveryMethodLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "deliverymethod:logo": {
            "description": "An image file containing the logo for the delivery method.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "Address2": {
        "type": "object",
        "description": "An address is a delivery, pickup or billing address associated with the current user.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The address identifier.",
            "format": "int32",
            "nullable": true
          },
          "full_name": {
            "type": "string",
            "description": "The full name of the recipient.",
            "nullable": true
          },
          "default": {
            "type": "boolean",
            "description": "True if the address is the user’s default address; Otherwise, false.",
            "nullable": true
          },
          "address_1": {
            "type": "string",
            "description": "The first line of the address.",
            "nullable": true
          },
          "address_2": {
            "type": "string",
            "description": "The second line of the address.",
            "nullable": true
          },
          "address_3": {
            "type": "string",
            "description": "The third line of the address.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The name of the city where the address is located.",
            "nullable": true
          },
          "state_province": {
            "type": "string",
            "description": "The name of the State or Province where the address is located.",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "description": "The postal code for the address.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressEmbeddedResources"
              }
            ]
          }
        }
      },
      "AddressLinks": {
        "title": "AddressLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "address:carrier": {
            "description": "The pickup windows available for Carrier collection.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "address:delete": {
            "description": "Delete the current user’s address.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "address:update": {
            "description": "Update the details of the current user’s address.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "AddressEmbeddedResources": {
        "title": "AddressEmbeddedResources",
        "type": "object",
        "properties": {
          "country": {
            "description": "The Country where the address is located.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          }
        }
      },
      "Pickup": {
        "type": "object",
        "description": "A scheduled courier pickup for a package.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The pickup identifier.",
            "format": "int32"
          },
          "start_date": {
            "type": "string",
            "description": "The earliest date that the courier will pickup the package.",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "description": "The latest date that the courier will pickup the package.",
            "format": "date-time"
          },
          "address": {
            "description": "The address where the courier will pickup the package.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PickupLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PickupEmbeddedResources"
              }
            ]
          }
        }
      },
      "PickupLinks": {
        "title": "PickupLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "pickup:delete": {
            "description": "Delete/Cancel a courier pickup",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "PickupEmbeddedResources": {
        "title": "PickupEmbeddedResources",
        "type": "object",
        "properties": {
          "carrier": {
            "description": "A carrier (e.g. UPS) that will collect tickets that are to be delivered.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Carrier"
              }
            ]
          }
        }
      },
      "Carrier": {
        "type": "object",
        "description": "A carrier (e.g. UPS) that will collect tickets that are to be delivered.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The carrier identifier.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the carrier.",
            "nullable": true
          },
          "pickup_windows": {
            "type": "array",
            "description": "The windows available for ticket collection.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PickupWindow"
            }
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CarrierLinks"
              }
            ]
          }
        }
      },
      "PickupWindow": {
        "type": "object",
        "description": "Represents a window of time when a courier pickup can be arranged.",
        "additionalProperties": false,
        "properties": {
          "start_date": {
            "type": "string",
            "description": "The date when the window starts.",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "description": "The date when the window ends.",
            "format": "date-time"
          }
        }
      },
      "CarrierLinks": {
        "title": "CarrierLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "carrier:createpickup": {
            "description": "Creates a new pickup for the ticket(s).",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "StateInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PatchShipmentRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tracking_number": {
            "type": "string",
            "description": "The identifier used to track the shipment of the ticket(s).",
            "nullable": true
          }
        }
      },
      "ETicketUploads": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketUploadsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketUploadsEmbeddedResources"
              }
            ]
          }
        }
      },
      "ETicketUploadsLinks": {
        "title": "ETicketUploadsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ETicketUploadsEmbeddedResources": {
        "title": "ETicketUploadsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ETicketUpload"
            }
          }
        }
      },
      "ETicketUpload": {
        "type": "object",
        "description": "Represents an uploaded file that contains one or more E-Tickets.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The identifier of the upload.",
            "format": "int32"
          },
          "file_name": {
            "type": "string",
            "description": "The name of the file that was uploaded.",
            "nullable": true
          },
          "processed_at": {
            "type": "string",
            "description": "The date when all of the E-Tickets in the uploaded file were processed.",
            "format": "date-time"
          },
          "original_number_of_etickets": {
            "type": "integer",
            "description": "The original number of E-Tickets contained in the uploaded file.",
            "format": "int32"
          },
          "status_description": {
            "type": "string",
            "description": "A localised in-depth description of the current status of the upload.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketUploadLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketUploadEmbeddedResources"
              }
            ]
          }
        }
      },
      "ETicketUploadLinks": {
        "title": "ETicketUploadLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "eticketupload:document": {
            "description": "The original file that was uploaded.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ETicketUploadEmbeddedResources": {
        "title": "ETicketUploadEmbeddedResources",
        "type": "object",
        "properties": {
          "etickets": {
            "type": "array",
            "description": "An array of the individual E-Tickets contained in the uploaded files.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ETicket"
            }
          }
        }
      },
      "ETicket": {
        "type": "object",
        "description": "An electronic ticket that has been uploaded for a listing or a sale.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The identifier of the E-Ticket.",
            "format": "int32"
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketLinks"
              }
            ]
          }
        }
      },
      "ETicketLinks": {
        "title": "ETicketLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "eticket:delete": {
            "description": "Delete this E-Ticket.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "eticket:document": {
            "description": "A PDF file containing the E-Ticket.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "eticket:thumbnail": {
            "description": "An image file containing a thumbnail of the E-Ticket.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ETickets": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketsEmbeddedResources"
              }
            ]
          }
        }
      },
      "ETicketsLinks": {
        "title": "ETicketsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ETicketsEmbeddedResources": {
        "title": "ETicketsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ETicket"
            }
          }
        }
      },
      "ETickets2": {
        "type": "object",
        "description": "The ETickets resource is a collection resource that contains zero or\nmore references to a set of E-Tickets, and links that guide you on\nways to interact with the E-Tickets. The collection offers a paginated\nview of E-Tickets.",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketsEmbeddedResources"
              }
            ]
          }
        }
      },
      "PostMarkBackETicketsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Sales": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SalesLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SalesEmbeddedResources"
              }
            ]
          }
        }
      },
      "SalesLinks": {
        "title": "SalesLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SalesEmbeddedResources": {
        "title": "SalesEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Sale"
            }
          }
        }
      },
      "Sale": {
        "type": "object",
        "description": "A sale on the viagogo marketplace that belongs to the currently authenticated user.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The sale identifier.",
            "format": "int32",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "The date when the sale was created.",
            "format": "date-time",
            "nullable": true
          },
          "seating": {
            "description": "The seating information for the ticket(s) that have been sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "proceeds": {
            "description": "The total amount that the seller will receive for the sale.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets that have been sold.",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "A short localised string describing the current status of the sale.",
            "nullable": true
          },
          "status_description": {
            "type": "string",
            "description": "A localised in-depth description of the current status of the sale.",
            "nullable": true
          },
          "display_proceeds": {
            "description": "The total amount that the seller will receive for the sale.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "confirm_by": {
            "type": "string",
            "description": "The date by which the seller must confirm the sale.",
            "format": "date-time",
            "nullable": true
          },
          "ship_by": {
            "type": "string",
            "description": "The date by which the seller must ship the tickets.",
            "format": "date-time",
            "nullable": true
          },
          "external_listing_id": {
            "type": "string",
            "description": "The listing identifier assigned by an external system, typically generated by the seller's inventory management software.",
            "nullable": true
          },
          "barcodes": {
            "type": "array",
            "description": "The barcode(s) for the ticket(s).",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BarcodeInformation"
            }
          },
          "in_hand_at": {
            "type": "string",
            "description": "The date and time that the seller has the tickets 'in hand' to deliver to the buyer.",
            "format": "date-time",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SaleLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SaleEmbeddedResources"
              }
            ]
          }
        }
      },
      "SaleLinks": {
        "title": "SaleLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:autotrackshipment": {
            "description": "The webpage where a shipment of tickets can be tracked automatically.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:changepapertickettoeticket": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:confirm": {
            "description": "Confirm the sale.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:contactuswebpage": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:etickets": {
            "description": "The uploaded E-Tickets that have been assigned to the tickets that have been sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:eticketuploads": {
            "description": "The uploaded files containing E-Tickets that have not been assigned to the tickets that have been sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:listing": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:reject": {
            "description": "Report a problem with the sale.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:saveetickets": {
            "description": "Assign uploaded E-Tickets to the tickets that have been sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:savetransferreceipts": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:shipments": {
            "description": "The shipments related to a sale.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:ticketholders": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:trackshipment": {
            "description": "The webpage where a shipment of tickets can be tracked after entering the tracking_number.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:transferreceiptuploads": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:uploadetickets": {
            "description": "Upload a file containing E-Tickets.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:uploadeticketurls": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:uploadtransferreceipts": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sale:webpage": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SaleEmbeddedResources": {
        "title": "SaleEmbeddedResources",
        "type": "object",
        "properties": {
          "delivery_method": {
            "description": "The delivery method for the ticket(s).",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedDeliveryMethod"
              }
            ]
          },
          "event": {
            "description": "The event for this sale.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedEvent"
              }
            ]
          },
          "ticket_type": {
            "description": "The type of ticket(s) that was sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TicketType"
              }
            ]
          },
          "venue": {
            "description": "The venue where the event is taking place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenue"
              }
            ]
          }
        }
      },
      "PatchSaleRequest": {
        "type": "object",
        "description": "A sale on the viagogo marketplace that belongs to the currently authenticated user.",
        "additionalProperties": false,
        "properties": {
          "confirmed": {
            "type": "boolean",
            "description": "True when the sale should be confirmed; Otherwise, false.",
            "nullable": true
          },
          "eticket_ids": {
            "type": "array",
            "description": "A array of the identifiers of the E-Tickets to be assigned to the sale.",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "transfer_confirmation_number": {
            "type": "string",
            "description": "Transfer confirmation number.",
            "nullable": true
          },
          "change_paper_ticket_to_eticket": {
            "type": "boolean",
            "description": "True when the ticket(s) should be changed from paper to E-ticket; Otherwise, false.",
            "nullable": true
          },
          "confirm_same_day_shipment": {
            "type": "boolean",
            "description": "True when same-day shipment is confirmed; Otherwise, false",
            "nullable": true
          },
          "in_hand_at": {
            "type": "string",
            "description": "The date and time that the seller has the tickets 'in hand' to deliver to the buyer.",
            "format": "date-time",
            "nullable": true
          },
          "tracking_number": {
            "type": "string",
            "description": "Tacking number of the ticket shipment.",
            "nullable": true
          },
          "barcodes": {
            "type": "array",
            "description": "The barcode(s) for the ticket(s).",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BarcodeInformation"
            }
          }
        }
      },
      "ETicketUrlRequest": {
        "type": "object",
        "description": "URL of E-Ticket.",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string",
            "description": "URL of E-Ticket.",
            "nullable": true
          },
          "index": {
            "type": "integer",
            "description": "Index of E-Ticket.",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "PostAlternativeOfferRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "section": {
            "type": "string",
            "nullable": true
          },
          "row": {
            "type": "string",
            "nullable": true
          },
          "seat_from": {
            "type": "string",
            "nullable": true
          },
          "seat_to": {
            "type": "string",
            "nullable": true
          },
          "listing_note_ids": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "offered_compensation": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "offered_compensation_currency_code": {
            "type": "string",
            "nullable": true
          },
          "venue_section_config_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "venue_section_config_row_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "ticket_type": {
            "type": "integer",
            "format": "int32"
          },
          "other_notes": {
            "type": "string",
            "nullable": true
          },
          "alternative_offer_state_id": {
            "type": "integer",
            "format": "int32"
          },
          "message_body": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Payments": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentsEmbeddedResources"
              }
            ]
          }
        }
      },
      "PaymentsLinks": {
        "title": "PaymentsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "PaymentsEmbeddedResources": {
        "title": "PaymentsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          }
        }
      },
      "Payment": {
        "type": "object",
        "description": "A payment on the viagogo marketplace that belongs to the currently authenticated user.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The payment identifier",
            "format": "int32",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "Date when the payment was created.",
            "format": "date-time",
            "nullable": true
          },
          "number_of_sales": {
            "type": "integer",
            "description": "Total number of sales associated to the payment.",
            "format": "int32"
          },
          "payment_amount": {
            "description": "Net amount the user will receive in this payment.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "credits": {
            "description": "Non-proceeds credits applied to the user's account, paid out in this payment.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "charges": {
            "description": "Charges applied to the user's account, settled in this payment.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "proceeds": {
            "description": "Money owed to the user from sale(s) of a ticket(s), paid out in this payment.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentEmbeddedResources"
              }
            ]
          }
        }
      },
      "PaymentLinks": {
        "title": "PaymentLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "PaymentEmbeddedResources": {
        "title": "PaymentEmbeddedResources",
        "type": "object",
        "properties": {
          "payment_method": {
            "description": "Payment method that will be used for the payments or charges.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedPaymentMethod"
              }
            ]
          },
          "sales": {
            "type": "array",
            "description": "Sales associated with the payment.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PaymentSale"
            }
          }
        }
      },
      "EmbeddedPaymentMethod": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "details": {
            "type": "string",
            "description": "The obfuscated details of the payment method",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedPaymentMethodLinks"
              }
            ]
          }
        }
      },
      "EmbeddedPaymentMethodLinks": {
        "title": "EmbeddedPaymentMethodLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "PaymentSale": {
        "type": "object",
        "description": "A sale related to a payment that belongs to the currently authenticated user.",
        "additionalProperties": false,
        "properties": {
          "proceeds": {
            "type": "array",
            "description": "Money owed to the user from this sale.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ChargeDetail"
            }
          },
          "charges": {
            "type": "array",
            "description": "Charges, related to this sale, that are applied to the user's account.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ChargeDetail"
            }
          },
          "credits": {
            "type": "array",
            "description": "Non-proceeds credits, related to this sale, that are applied to the user's account.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ChargeDetail"
            }
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentSaleLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentSaleEmbeddedResources"
              }
            ]
          }
        }
      },
      "ChargeDetail": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "amount": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "reason_description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaymentSaleLinks": {
        "title": "PaymentSaleLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "PaymentSaleEmbeddedResources": {
        "title": "PaymentSaleEmbeddedResources",
        "type": "object",
        "properties": {
          "event": {
            "description": "The event for this sale.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedEvent"
              }
            ]
          },
          "sale": {
            "description": "A sale associated with a payment.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedSale"
              }
            ]
          },
          "venue": {
            "description": "The venue where the event is taking place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenue"
              }
            ]
          }
        }
      },
      "EmbeddedSale": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The sale identifier.",
            "format": "int32",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "The date when the sale was created.",
            "format": "date-time",
            "nullable": true
          },
          "seating": {
            "description": "The seating information for the ticket(s) that have been sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "proceeds": {
            "description": "The total amount that the seller will receive for the sale.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets that have been sold.",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedSaleLinks"
              }
            ]
          }
        }
      },
      "EmbeddedSaleLinks": {
        "title": "EmbeddedSaleLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SalesAggregates": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SalesAggregatesLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SalesAggregatesEmbeddedResources"
              }
            ]
          }
        }
      },
      "SalesAggregatesLinks": {
        "title": "SalesAggregatesLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SalesAggregatesEmbeddedResources": {
        "title": "SalesAggregatesEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SalesAggregate"
            }
          }
        }
      },
      "Webhooks": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WebhooksLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WebhooksEmbeddedResources"
              }
            ]
          }
        }
      },
      "WebhooksLinks": {
        "title": "WebhooksLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "webhook:create": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "WebhooksEmbeddedResources": {
        "title": "WebhooksEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Webhook"
            }
          }
        }
      },
      "Webhook": {
        "type": "object",
        "description": "A webhook is a subscription from a server application to certain topics\non the viagogo platform. When an occurrence of a topic is triggered,\nwe’ll POST a payload to the webhook’s configured url.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The webhook identifier.",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the webhook.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "The date when the webhook was created.",
            "format": "date-time"
          },
          "topics": {
            "type": "array",
            "description": "An array of the topics the webhook is trigger for.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string",
            "description": "The server endpoint that will receive the webhook payload.",
            "nullable": true
          },
          "authorization_header": {
            "type": "string",
            "description": "The Authorization header value that should be included in requests to the webhook.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WebhookLinks"
              }
            ]
          }
        }
      },
      "WebhookLinks": {
        "title": "WebhookLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "webhook:delete": {
            "description": "Delete a webhook.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "webhook:ping": {
            "description": "Ping a webhook.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "webhook:update": {
            "description": "Update the details of a webhook.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "PostWebhookRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the webhook.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The server endpoint that will receive the webhook payload.",
            "nullable": true
          },
          "authorization_header": {
            "type": "string",
            "description": "The Authorization header value that should be included in requests to the webhook.",
            "nullable": true
          },
          "topics": {
            "type": "array",
            "description": "An array of the topics the webhook is trigger for.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PatchWebhookRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the webhook.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The server endpoint that will receive the webhook payload.",
            "nullable": true
          },
          "authorization_header": {
            "type": "string",
            "description": "The Authorization header value that should be included in requests to the webhook.",
            "nullable": true
          },
          "topics": {
            "type": "array",
            "description": "An array of the topics the webhook is trigger for.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Addresses": {
        "type": "object",
        "description": "The Addresses resource is a collection resource that contains zero or\nmore references to a set of addresses, and links that guide you on ways\nto interact with the addresses. The collection offers a paginated view\nof addresses.",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressesLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressesEmbeddedResources"
              }
            ]
          }
        }
      },
      "AddressesLinks": {
        "title": "AddressesLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "address:create": {
            "description": "Add a new address for the current user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "AddressesEmbeddedResources": {
        "title": "AddressesEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Address2"
            }
          }
        }
      },
      "PostAddressRequest": {
        "type": "object",
        "description": "An address is a delivery, pickup or billing address associated with the current user.",
        "additionalProperties": false,
        "properties": {
          "full_name": {
            "type": "string",
            "description": "The full name of the recipient.",
            "nullable": true
          },
          "default": {
            "type": "boolean",
            "description": "True if the address is the current user's default address; Otherwise, false.",
            "nullable": true
          },
          "address_1": {
            "type": "string",
            "description": "The first line of the address.",
            "nullable": true
          },
          "address_2": {
            "type": "string",
            "description": "The second line of the address.",
            "nullable": true
          },
          "address_3": {
            "type": "string",
            "description": "The third line of the address.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The name of the city where the address is located.",
            "nullable": true
          },
          "state_province": {
            "type": "string",
            "description": "The name of the State or Province where the address is located.",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "description": "The postal code for the address.",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "description": "The 2 character ISO code that identifies the country in which the address is located.",
            "nullable": true
          }
        }
      },
      "PatchAddressRequest": {
        "type": "object",
        "description": "An address is a delivery, pickup or billing address associated with the current user.",
        "additionalProperties": false,
        "properties": {
          "full_name": {
            "type": "string",
            "description": "The full name of the recipient.",
            "nullable": true
          },
          "default": {
            "type": "boolean",
            "description": "True if the address is the current user's default address; Otherwise, false.",
            "nullable": true
          },
          "address_1": {
            "type": "string",
            "description": "The first line of the address.",
            "nullable": true
          },
          "address_2": {
            "type": "string",
            "description": "The second line of the address.",
            "nullable": true
          },
          "address_3": {
            "type": "string",
            "description": "The third line of the address.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The name of the city where the address is located.",
            "nullable": true
          },
          "state_province": {
            "type": "string",
            "description": "The name of the State or Province where the address is located.",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "description": "The postal code for the address.",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "description": "The 2 character ISO code that identifies the country in which the address is located.",
            "nullable": true
          }
        }
      },
      "PaymentMethods": {
        "type": "object",
        "description": "The PaymentMethods resource is a collection resource that contains zero\nor more references to a set of payment methods, and links that guide you\non ways to interact with the payment methods. The collection offers a\npaginated view of payment methods.",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodsEmbeddedResources"
              }
            ]
          }
        }
      },
      "PaymentMethodsLinks": {
        "title": "PaymentMethodsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "paymentmethod:createcreditcard": {
            "description": "Adds a new credit card for the current user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "paymentmethod:createpaypal": {
            "description": "Adds a new PayPal account for the current user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "PaymentMethodsEmbeddedResources": {
        "title": "PaymentMethodsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            }
          }
        }
      },
      "PaymentMethod": {
        "type": "object",
        "description": "A method to send or receive payment.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The payment method identifier.",
            "format": "int32",
            "nullable": true
          },
          "details": {
            "type": "string",
            "description": "The obfuscated details of the payment method.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of the payment method.",
            "nullable": true
          },
          "type_description": {
            "type": "string",
            "description": "A localised string describing the type of payment method.",
            "nullable": true
          },
          "buyer_method": {
            "type": "boolean",
            "description": "True if the payment method can be used for purchasing listings; otherwise, false.",
            "nullable": true
          },
          "default_buyer_method": {
            "type": "boolean",
            "description": "True if the payment method is the user’s default payment method for purchasing listings.",
            "nullable": true
          },
          "seller_method": {
            "type": "boolean",
            "description": "True if the payment method can be used for receiving payments; otherwise, false.",
            "nullable": true
          },
          "default_seller_method": {
            "type": "boolean",
            "description": "True if the payment method is the user’s default payment method for receiving payments.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodEmbeddedResources"
              }
            ]
          }
        }
      },
      "PaymentMethodLinks": {
        "title": "PaymentMethodLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "paymentmethod:delete": {
            "description": "Delete the current user’s payment method.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "paymentmethod:updatecreditcard": {
            "description": "Update the current user’s credit card details.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "paymentmethod:updatedefaults": {
            "description": "Update the default payment methods for the current user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "paymentmethod:updatepaypal": {
            "description": "Update the current user’s PayPal details.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "PaymentMethodEmbeddedResources": {
        "title": "PaymentMethodEmbeddedResources",
        "type": "object",
        "properties": {
          "billing_address": {
            "description": "The billing address for this payment method.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address2"
              }
            ]
          },
          "type_details": {
            "type": "object",
            "description": "The type details for this payment method.",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "PutListingPaymentMethodsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "number_of_tickets": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "delivery_address_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "delivery_method_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "coupons": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "pickup_full_name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PatchPaymentMethodRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "default_buyer_method": {
            "type": "boolean",
            "nullable": true
          },
          "default_seller_method": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "PostOrPutPaymentMethodRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "default_buyer_method": {
            "type": "boolean",
            "nullable": true
          },
          "default_seller_method": {
            "type": "boolean",
            "nullable": true
          },
          "full_name": {
            "type": "string",
            "nullable": true
          },
          "billing_address_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "card_number": {
            "type": "string",
            "nullable": true
          },
          "expiry_month": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiry_year": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "start_month": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "start_year": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "issue_number": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PatchUserRequest": {
        "type": "object",
        "description": "An authenticated user.",
        "additionalProperties": false,
        "properties": {
          "full_name": {
            "type": "string",
            "description": "The full name of the user.",
            "nullable": true
          },
          "email_optin": {
            "type": "boolean",
            "description": "True if the user is signed up for the viagogo email newsletter; otherwise, false.",
            "nullable": true
          }
        }
      },
      "PostUserRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "full_name": {
            "type": "string",
            "description": "The full name of the user.",
            "nullable": true
          },
          "email_optin": {
            "type": "boolean",
            "description": "True if the user is signed up for the viagogo email newsletter; otherwise, false.",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "primary_phone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PostBrokerageRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "password": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "primary_phone": {
            "type": "string",
            "nullable": true
          },
          "full_name": {
            "type": "string",
            "description": "The full name of the user.",
            "nullable": true
          },
          "email_optin": {
            "type": "boolean",
            "description": "True if the user is signed up for the viagogo email newsletter; otherwise, false.",
            "nullable": true
          },
          "address_line_1": {
            "type": "string",
            "nullable": true
          },
          "address_line_2": {
            "type": "string",
            "nullable": true
          },
          "address_line_3": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "nullable": true
          },
          "post_code": {
            "type": "string",
            "nullable": true
          },
          "state_province": {
            "type": "string",
            "nullable": true
          },
          "broker_name": {
            "type": "string",
            "nullable": true
          },
          "client_application_id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PostPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "responses": {
      "requires_authentication": {
        "description": "Authentication credentials were missing or incorrect.",
        "content": {
          "application/hal+json": {
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Error"
                }
              ]
            }
          }
        }
      },
      "not_found": {
        "description": "The URI requested is invalid or the resource requested, such as an event, does not exist.",
        "content": {
          "application/hal+json": {
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Error"
                }
              ]
            }
          }
        }
      },
      "forbidden": {
        "description": "The request is understood, but it has been refused or access is not allowed. An accompanying error message will explain why.",
        "content": {
          "application/hal+json": {
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Error"
                }
              ]
            }
          }
        }
      },
      "internal_server_error": {
        "description": "Internal server error",
        "content": {
          "application/hal+json": {
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Error"
                }
              ]
            }
          }
        }
      },
      "validation_failed": {
        "description": "The request data is not valid. errors will contain an object with a localized message that describes the validation error for each property of the data.",
        "content": {
          "application/hal+json": {
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Error"
                }
              ]
            }
          }
        }
      }
    },
    "parameters": {
      "fields": {
        "in": "query",
        "description": "A comma-separated list of the name(s) of the field(s) to be returned."
      },
      "embed": {
        "in": "query",
        "description": "Optional embedded resources are only included in a resource when your application includes the embedded property name(s) as a comma-separated value in the embed parameter."
      }
    },
    "headers": {
      "Content-Language": {
        "schema": {
          "type": "string"
        },
        "example": "en-US"
      },
      "Content-Type": {
        "schema": {
          "type": "string"
        },
        "example": "application/hal+json"
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "bearerFormat": "JWT",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://account.viagogo.com/authorize",
            "tokenUrl": "https://account.viagogo.com/oauth2/token",
            "refreshUrl": "https://account.viagogo.com/oauth2/token",
            "scopes": {
              "(no scope)": "Grants read-only access to public information like events, listings.",
              "read:user": "Grants read-only access to the user's account information, addresses, payment methods, purchases and sales.",
              "write:user": "Grants write access to the user’s account information, addresses, payment methods and sales.",
              "write:purchases": "Grants write access to the user’s purchases. This allows users to use your application to purchase listings.",
              "read:sellerlistings": "Grants read access to the user’s listings.",
              "write:sellerlistings": "Grants write access to the user’s listings. This allows users to use your application to create and update listings.",
              "read:webhooks": "Grants read access to the user’s webhooks.",
              "write:webhooks": "Grants write access to the user’s webhooks.",
              "write:requestedevents": "Grants write access to the user’s requested events. This allows users to use your application to request an event to be added to the viagogo platform.",
              "read:payment": "Grants read-only access to the user's payments",
              "read:sales": "Grants read-only access to the user's sales.",
              "write:sales": "Grants write access to the user's sales. This allows users to use your application to confirm and fulfill sales."
            }
          },
          "clientCredentials": {
            "tokenUrl": "https://account.viagogo.com/oauth2/token",
            "scopes": {}
          },
          "authorizationCode": {
            "authorizationUrl": "https://account.viagogo.com/authorize",
            "tokenUrl": "https://account.viagogo.com/oauth2/token",
            "refreshUrl": "https://account.viagogo.com/oauth2/token",
            "scopes": {
              "(no scope)": "Grants read-only access to public information like events, listings.",
              "read:user": "Grants read-only access to the user's account information, addresses, payment methods, purchases and sales.",
              "write:user": "Grants write access to the user’s account information, addresses, payment methods and sales.",
              "write:purchases": "Grants write access to the user’s purchases. This allows users to use your application to purchase listings.",
              "read:sellerlistings": "Grants read access to the user’s listings.",
              "write:sellerlistings": "Grants write access to the user’s listings. This allows users to use your application to create and update listings.",
              "read:webhooks": "Grants read access to the user’s webhooks.",
              "write:webhooks": "Grants write access to the user’s webhooks.",
              "write:requestedevents": "Grants write access to the user’s requested events. This allows users to use your application to request an event to be added to the viagogo platform.",
              "read:payment": "Grants read-only access to the user's payments",
              "read:sales": "Grants read-only access to the user's sales.",
              "write:sales": "Grants write access to the user's sales. This allows users to use your application to confirm and fulfill sales."
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Addresses"
    },
    {
      "name": "Categories"
    },
    {
      "name": "Currencies"
    },
    {
      "name": "E-Tickets (Inventory)"
    },
    {
      "name": "E-Tickets (Sales)"
    },
    {
      "name": "Events"
    },
    {
      "name": "ListingConstraints"
    },
    {
      "name": "Listings"
    },
    {
      "name": "MetroAreas"
    },
    {
      "name": "PaymentMethods"
    },
    {
      "name": "Payments"
    },
    {
      "name": "Root"
    },
    {
      "name": "Sales",
      "description": "View your sales details and fulfill your sales."
    },
    {
      "name": "SalesAggregates"
    },
    {
      "name": "Search"
    },
    {
      "name": "SellerEvents"
    },
    {
      "name": "SellerListings",
      "description": "List tickets, update your listings and search your inventory."
    },
    {
      "name": "Shipments (Inventory)"
    },
    {
      "name": "Shipments (Sales)"
    },
    {
      "name": "User"
    },
    {
      "name": "Venues"
    },
    {
      "name": "Webhooks"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Discover",
      "tags": [
        "Categories",
        "Currencies",
        "Events",
        "Listings",
        "MetroAreas",
        "Root",
        "Search",
        "Venues"
      ]
    },
    {
      "name": "Manage Inventory",
      "tags": [
        "E-Tickets (Inventory)",
        "ListingConstraints",
        "SellerEvents",
        "SellerListings",
        "Shipments (Inventory)"
      ]
    },
    {
      "name": "Manage Sales",
      "tags": [
        "E-Tickets (Sales)",
        "Payments",
        "Sales",
        "SalesAggregates",
        "Shipments (Sales)"
      ]
    },
    {
      "name": "React To Changes",
      "tags": [
        "Webhooks"
      ]
    },
    {
      "name": "Manage Account",
      "tags": [
        "Addresses",
        "PaymentMethods",
        "User"
      ]
    }
  ]
}
